<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>论文写作之introduction</title>
    <url>/2020/03/29/paper-introduction/</url>
    <content><![CDATA[<p>本篇为introduction的写法.</p>
<p>1.介绍领域的大背景，然后逐渐聚焦到研究的内容上（研究背景 重要性）</p>
<p>2.描述与评价相关内容的研究进展和前言，指出研究GAP（重要性 GAP 综述全面）</p>
<p>3.说明本文针对的问题，有哪些难点（问题难点）</p>
<p>4.提出本文采用的解决办法，简单描述（重点描述方法的创新之处）</p>
<p>5.说明文章的创新点和贡献（创新点和贡献）</p>
<p>6.简要说明文章的结构</p>
<p>其中2和3可以合并来写，先指出研究的问题，然后说明有哪些难点，分别针对每个难点，描述之前有哪些研究，怎样解决的，最后总结还有哪些没解决/没解决好的。</p>
]]></content>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>论文写作之abstract</title>
    <url>/2020/03/29/paper-abstract/</url>
    <content><![CDATA[<p>最近在学习写论文的套路，整理了一下。本篇为abstract的写法。</p>
<p>1.describe the problem and its importance</p>
<p>2.describe difficulties and unsolved issues</p>
<p>3.what methods are proposed in this paper</p>
<p>4.how the proposed method solves the problem</p>
<p>5.what results, contributions, and applications have the methods achieved, and how these can be studied in the future</p>
]]></content>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>遇上百分百女孩（下）</title>
    <url>/2020/03/26/%E9%81%87%E4%B8%8A%E7%99%BE%E5%88%86%E7%99%BE%E5%A5%B3%E5%AD%A9%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
    <content><![CDATA[<p>很久很久以前，有个地方有一个少男和少女。少男18少女16。少男算不得英俊，少女也不怎么漂亮，无非随处可见的孤独而平常的少男少女。但两人一直坚信着世上有某个地方一定存在着百分之百适合自己的少女和少男。是的，两人相信奇迹，而奇迹真发生了。</p>
<a id="more"></a>
<p>一天两人在街头不期而遇。</p>
<p>“真巧！我一直在寻找你。也许你不相信，你对我是百分之百的男孩。从头到脚跟我想象的一模一样。简直是在做梦。”两人坐在公园长椅上，手拉手，百谈不厌。两人已不再孤单。百分之百需求对方，百分之百已被对方需求。而百分之百需求对方和百分之百地被对方需求是何等美妙的事情啊！这已是宇宙奇迹！</p>
<p>但两人心中掠过一个小小的，的确小而又小的疑虑：梦想如此轻易成真是否就是好事？</p>
<p>交谈突然中断时，少男这样说道：“我说，再尝试一次吧！如果我们两人真是一对百分之百的恋人的话，肯定还会有一天在哪里相遇。下次相遇时如果仍觉得对方百分之百，就马上在那里结婚，好么？”“好的。”少女回答。</p>
<p>于是两人分开，各奔东西。</p>
<p>然而说实话，更本没必要尝试，纯属多此一举。为什么呢？因为两人的的确确是一对百分之百的恋人，因为那是奇迹般的邂逅。但两人过于年轻，没办法知道这许多。于是无情的命运开始捉弄两人。</p>
<p>一年冬天，两人都染上了那年肆虐的恶性流感。在死亡线徘徊几个星期后，过去的记忆丧失殆尽，事情也真是离奇。当两人睁眼醒来时，脑袋里犹如D<br>.H劳伦斯少年时代的贮币盒一样空空如也。</p>
<p>但这对青年男女毕竟聪颖豁达且极有毅力，经过不懈努力，终于再度获得了新的知识新的情感，胜任愉快地重返社会生活。啊，我的上帝！这俩人真是无可挑剔！他们完全能够换乘地铁，能够在邮局寄交快信。并且分别体验了百分之七十五和百分之八十五的恋爱。</p>
<p>如此一来二去，少男32，少女31岁了。时光以惊人的速度流逝。</p>
<p>四月的一个晴朗的早晨，少男为喝折价咖啡沿原宿后街由西向东走，少女为买快信邮票沿东向西走，俩人恰在路中间失之交臂。失去的记忆的微光刹那间照亮两颗心。</p>
<p>俩人胸口陡然悸颤，并且得知：她对我是百分之百的男孩。然而俩人的记忆的烛光委实过于微弱，俩人的话语也不似十四年前那般清晰。结果连句话也没说便擦肩而过，径直消失在人群中，永远永远。</p>
<p>你不觉得这是个令人感伤的故事么？</p>
<p>是的，我本该这样向她搭话。</p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/divorce.jpg" alt="图片"></p>
]]></content>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>遇上百分百女孩（上）</title>
    <url>/2020/03/26/%E9%81%87%E4%B8%8A%E7%99%BE%E5%88%86%E7%99%BE%E5%A5%B3%E5%AD%A9%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
    <content><![CDATA[<p>四月一个晴朗的早晨，我在原宿后街同一个百分之百的女孩擦肩而过。</p>
<a id="more"></a>
<p>不讳的说，女孩儿算不得怎么漂亮，并无吸引人之处，衣着也不出众，脑后的头发执着带有睡觉挤压的痕迹。年龄也已经不小了—应该快有30了。严格地来说，恐怕很难称之为女孩。然而，相距50米开外我便一眼看出：对我来说，她是个百分之百的女孩。从看见她身资的那一瞬间，我的胸口便如同发生地鸣一般的震颤，口中如沙漠干的沙沙作响。</p>
<p>或许你也有你的理想女孩。例如喜欢足颈细弱的女孩，毕竟眼睛大的女孩，十指绝对好看的女孩，或不明所以地迷上慢慢花时间进食的女孩。我当然也有自己的偏爱。在饭店时就曾看邻桌一个女孩的鼻形看的发呆。但要明确勾勒百分之百的女孩形象，任何人都无法做到。我就绝对想不到她长有怎样的鼻子。甚至是否有鼻子都已记不真切。现在我所能记的，只有她并非十分漂亮这一点。事实也真是不可思议。</p>
<p>“昨天在路上同一个百分之百的女孩擦肩而过。”我对一个人说。</p>
<p>“唔，”他应到，“人可漂亮？”</p>
<p>“不，不是说这个。”</p>
<p>“那，是合你口味那种类型喽？”</p>
<p>“记不得了。眼睛什么样啦，胸部是大是小啦，统统忘得一干二净。”</p>
<p>“莫名其妙啊！”</p>
<p>“是莫名其妙。”</p>
<p>“那么，”他显的兴味索然，“你做什么了？搭话了？还是跟踪了？”</p>
<p>“什么都没有做。”我说，“仅仅是擦肩而过。”</p>
<p>她由东往西走，我从西往东去，在四月里一个神清气爽的早晨。</p>
<p>我想和她说话，哪怕30分钟也好。想打听她的身世，也想全盘拖出自己的身世。而更重要的，是想弄清导致1981年4月一个晴朗的早晨我们在原宿后街擦肩而过这一命运的原委。里面肯定有充满和平时代的古老机器般温馨的秘密。</p>
<p>如此谈罢，我们可以找地方吃饭，看伍迪.爱伦的影片，再顺路到宾馆里的酒吧喝鸡尾酒什么的。弄不好，喝完说不定能同她睡上一觉。可能性在叩击我的心扉。我和她之间的距离已近至十五六米了。问题是，我到底该如何向她搭话呢？</p>
<p>“你好！和我说说话可以吗？哪怕30分钟也好。”过于傻气，简直像劝人加入保险。“请问，这一带有24小时营业的洗衣店吗？”这也同样傻里傻气。何况我岂非连洗衣袋都没带！有谁能相信我的道白呢？也许开门见山的好些。“你好！你对我可是百分之百的女孩呦！”</p>
<p>不，不成，她恐怕不会相信我的表白。纵然相信，也未必愿同我说什么话。她可能这样说：即使我对你是百分之百的女孩，你对我可不是百分之百的男人，抱歉！而这是大有可能的。如果陷入这般境地，我肯定全然不知所措。这一打击说不定使我一蹶不振。我已32岁，所谓上了年纪归根结底便是这么一回事。</p>
<p>我是在花店门前和她擦肩而过的，那暖暖的小小的气块儿触到我的肌肤。柏油路面洒了水，周围荡漾着玫瑰花香。连向她打声招呼我都未能做到。她身穿毛衣，右手拿着一个尚未贴邮票的四方信封。她给谁写了封信。那般睡眼惺忪，说不定写了整整一个晚上。那四方信封里有可能装有她的全部秘密。走几步回头时，她的身影早已消失在人群中。</p>
<p>当然，今天我已完全清楚当时应该怎样向她搭话。但不管怎么说，那道白实在太长，我笃定表达不好—就是这样，我所想到的每每不够实用。总之，道白自“很久很久以前”开始，而以“你不觉得这是个忧伤的故事吗”结束。</p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/love.jpg" alt="图片"></p>
]]></content>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>远行，方有一种心境</title>
    <url>/2020/03/21/%E8%BF%9C%E8%A1%8C%EF%BC%8C%E6%96%B9%E6%9C%89%E4%B8%80%E7%A7%8D%E5%BF%83%E5%A2%83/</url>
    <content><![CDATA[<p>夜阑人静</p>
<p>偶闻遥远的吠声</p>
<a id="more"></a>
<p>在这远离故乡的地方</p>
<p>树影婆娑如梦</p>
<p>思绪缓缓地流动</p>
<p>忆起少年往事</p>
<p>往事像窗外的流萤</p>
<p>有几多可笑 几多烦恼</p>
<p>全被岁月一一抚平</p>
<p>不知为什么</p>
<p>今夕 会想起太多</p>
<p>或许</p>
<p>远行，方有一种心境</p>
]]></content>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>怀恋</title>
    <url>/2020/03/19/%E6%80%80%E6%81%8B/</url>
    <content><![CDATA[<p>终于你也懂得了，</p>
<p>自己之所以会想念他，</p>
<p>其实并不是因为他的好，</p>
<p>而是因为，</p>
<p>之后再也没有一个人可以让你觉得好，</p>
<p>你怀恋的，自始至终，都是爱。</p>
]]></content>
      <tags>
        <tag>love</tag>
      </tags>
  </entry>
  <entry>
    <title>Github官方App</title>
    <url>/2020/03/18/Github%E5%AE%98%E6%96%B9App/</url>
    <content><![CDATA[<p>Github官方App发布，官网下载地址:<a href="https://github.com/mobile" target="_blank" rel="noopener">https://github.com/mobile</a></p>
<p>百度网盘分享: <a href="https://pan.baidu.com/s/1RA8byuybDUJV6n4TPze_Cg" target="_blank" rel="noopener">https://pan.baidu.com/s/1RA8byuybDUJV6n4TPze_Cg</a> 提取码：fyyr</p>
]]></content>
      <tags>
        <tag>Technology Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>补上前些日子的</title>
    <url>/2020/03/16/2020-03-16/</url>
    <content><![CDATA[<p>我没遇到你是我的遗憾，你没遇到我是你的遗憾，为什么我们要让自己充满遗憾。</p>
<a id="more"></a>
<p>凡为过去，皆为序章。</p>
<p>如果结果还不够好，那就是还没到剧终。</p>
<p>“不是两情相悦才是爱吗？”“相爱是很难的，更多的是像我这样的。”</p>
<p>你知道我得鼓起多大勇气和你说这些吗，我要亲口告诉你，是我不对，我说了我还有一半的机会，如果我不说，我就永远没有机会了。</p>
<p>你知道比悲伤更悲伤的事情是什么吗？比悲伤更悲伤的是空欢喜。</p>
<p>人的出场顺序真的很重要，不是你不好，而是相遇太晚，要走的人留不住。</p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/ironman.jpg" alt="图片"></p>
]]></content>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>皮囊</title>
    <url>/2020/03/15/beautiful-sentences/</url>
    <content><![CDATA[<p>“当你坐在一个人面前，听她说话，看的到各种复杂、精密的情况和命运，如何才能最终雕<br>刻这样的性格、思想、做法、长相，这才是理解。。。也会发觉：这世界最美丽的风景，是<br>一个一个活出各自模样和体系的人。”生活从来不会无聊寡淡，只要你懂得欣赏眼前的风景。</p>
<a id="more"></a>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/girl.jpg" alt="图片"></p>
]]></content>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统更换yum源</title>
    <url>/2020/03/15/Linux%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%8D%A2yum%E6%BA%90/</url>
    <content><![CDATA[<h2 id="Linux简介"><a href="#Linux简介" class="headerlink" title="Linux简介"></a>Linux简介</h2><a id="more"></a>
<p>目前在长期稳定运行的网站服务器、处理大量数据的集群系统以及需要协同工作的环境中都<br>大量采用Linux系统。相较于Windows系统而言，Linux系统具有以下优势：<br>1.稳定且有效率 2.免费或少许费用 3.漏洞少且快速修补 4.多任务多用户<br>5.更加安全的用户及文件权限策略 6.适合小内核程序的嵌入系统 7.相对不耗资源</p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/Linux_vs_Windows.jpg" alt="图片"></p>
<p>常见的Linux系统有如下几种：</p>
<p>红帽企业版（RedHat Enterprise Linux）：RHEL是全世界内使用最广泛的Linux系统。</p>
<p>社区企业操作系统（Communicity Enterprise Operating System, CentOS ）：RHEL重新编译发布的免费Linux系统。</p>
<p>Fedora：红帽公司发布的桌面版系统套件。</p>
<p>openSUSE：德国的一款著名Linux系统。</p>
<p>Gentoo：具有极高的自定制性，操作复杂。</p>
<p>Debian：稳定性、安全性强，可以良好地支持各种硬件架构。</p>
<p>Ubuntu：对新款硬件具有极强的兼容能力。</p>
<p>然而没有注册的RHEL是无法使用yum来安装软件的，为此需要将yum源更换成CentOS的免费源来解决包的依赖问题。</p>
<h2 id="更换yum源"><a href="#更换yum源" class="headerlink" title="更换yum源"></a>更换yum源</h2><p>打开虚拟机（作者的红帽是装在虚拟机上的）终端执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep yum</span><br></pre></td></tr></table></figure>
<p>系统将会显示自带的yum源，<br>删除系统自带的yum组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep yum | xargs rpm -e --nodeps</span><br></pre></td></tr></table></figure>
<p>进入<a href="http://mirrors.163.com" target="_blank" rel="noopener">网易163源镜像地址</a>，在路径centos/7/os/x86_64/Packages/下载（可以在物理机上下载或者在虚拟机上使用wget下载）python-iniparse-0.4-9.el7.noarch、python-iniparse-0.4-9.el7.noarch、yum-3.4.3-161.el7.centos.noarch、yum-metadata-parser-1.1.4-10.el7.x86_64、yum-plugin-fastestmirror-1.1.31-50.el7.noarch这五个包。</p>
<p>安装软件包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -ivh yum-*</span><br><span class="line"># 此时会报依赖的错误</span><br><span class="line">rpm &gt;&#x3D; 0:4.11.3-35 is needed by yum-3.4.3-161.el7.centos.noarch</span><br></pre></td></tr></table></figure>
<p>下载rpm-4.11.3-35.el7.x86_64包并重新安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -Uvh rpm-4.11.3-35.el7.x86_64.rpm --nodeps</span><br><span class="line">rpm -ivh yum-*</span><br></pre></td></tr></table></figure>
<p>更新yum源文件，可以下载使用163的yum源文件CentOS6-Base-163，放在/etc/yum.repo.d目录下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo</span><br></pre></td></tr></table></figure>
<p>内容如下，将$releasever改成7即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># CentOS-Base.repo</span><br><span class="line">#</span><br><span class="line"># The mirror system uses the connecting IP address of the client and the</span><br><span class="line"># update status of each mirror to pick mirrors that are updated to and</span><br><span class="line"># geographically close to the client.  You should use this for CentOS updates</span><br><span class="line"># unless you are manually picking other mirrors.</span><br><span class="line">#</span><br><span class="line"># If the mirrorlist&#x3D; does not work for you, as a fall back you can try the </span><br><span class="line"># remarked out baseurl&#x3D; line instead.</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">[base]</span><br><span class="line">name&#x3D;CentOS-7 - Base - 163.com</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;mirrors.163.com&#x2F;centos&#x2F;7&#x2F;os&#x2F;$basearch&#x2F;</span><br><span class="line">#mirrorlist&#x3D;http:&#x2F;&#x2F;mirrorlist.centos.org&#x2F;?release&#x3D;$releasever&amp;arch&#x3D;$basearch&amp;repo&#x3D;os</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">gpgkey&#x3D;http:&#x2F;&#x2F;mirror.centos.org&#x2F;centos&#x2F;RPM-GPG-KEY-CentOS-6</span><br><span class="line"></span><br><span class="line">#released updates </span><br><span class="line">[updates]</span><br><span class="line">name&#x3D;CentOS-7 - Updates - 163.com</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;mirrors.163.com&#x2F;centos&#x2F;7&#x2F;updates&#x2F;$basearch&#x2F;</span><br><span class="line">#mirrorlist&#x3D;http:&#x2F;&#x2F;mirrorlist.centos.org&#x2F;?release&#x3D;$releasever&amp;arch&#x3D;$basearch&amp;repo&#x3D;updates</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">gpgkey&#x3D;http:&#x2F;&#x2F;mirror.centos.org&#x2F;centos&#x2F;RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#additional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name&#x3D;CentOS-7 - Extras - 163.com</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;mirrors.163.com&#x2F;centos&#x2F;7&#x2F;extras&#x2F;$basearch&#x2F;</span><br><span class="line">#mirrorlist&#x3D;http:&#x2F;&#x2F;mirrorlist.centos.org&#x2F;?release&#x3D;$releasever&amp;arch&#x3D;$basearch&amp;repo&#x3D;extras</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">gpgkey&#x3D;http:&#x2F;&#x2F;mirror.centos.org&#x2F;centos&#x2F;RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#additional packages that extend functionality of existing packages</span><br><span class="line">[centosplus]</span><br><span class="line">name&#x3D;CentOS-7 - Plus - 163.com</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;mirrors.163.com&#x2F;centos&#x2F;7&#x2F;centosplus&#x2F;$basearch&#x2F;</span><br><span class="line">#mirrorlist&#x3D;http:&#x2F;&#x2F;mirrorlist.centos.org&#x2F;?release&#x3D;$releasever&amp;arch&#x3D;$basearch&amp;repo&#x3D;centosplus</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;0</span><br><span class="line">gpgkey&#x3D;http:&#x2F;&#x2F;mirror.centos.org&#x2F;centos&#x2F;RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#contrib - packages by Centos Users</span><br><span class="line">[contrib]</span><br><span class="line">name&#x3D;CentOS-7 - Contrib - 163.com</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;mirrors.163.com&#x2F;centos&#x2F;7&#x2F;contrib&#x2F;$basearch&#x2F;</span><br><span class="line">#mirrorlist&#x3D;http:&#x2F;&#x2F;mirrorlist.centos.org&#x2F;?release&#x3D;$releasever&amp;arch&#x3D;$basearch&amp;repo&#x3D;contrib</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;0</span><br><span class="line">gpgkey&#x3D;http:&#x2F;&#x2F;mirror.centos.org&#x2F;centos&#x2F;RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>
<p>清除yum缓存</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br><span class="line"># 生成缓存</span><br><span class="line">yum makeche</span><br><span class="line"># 查看新源</span><br><span class="line">yum repolist</span><br><span class="line">yum repolist</span><br><span class="line">repo id                      repo name                             status</span><br><span class="line">!base&#x2F;x86_64                 CentOS-$7 - Base - 163.com             8,652</span><br><span class="line">!extras&#x2F;x86_64               CentOS-$7 - Extras - 163.com           275</span><br><span class="line">!updates&#x2F;x86_64              CentOS-$7 - Updates - 163.com          1,707</span><br><span class="line">repolist: 10,634</span><br></pre></td></tr></table></figure>
<p>yum源已更换成功，下面就可以自由使用yum安装软件啦。</p>
<p>附：<a href="https://pan.baidu.com/s/1lUSU9PdFOpmji2kSKnO1NA" target="_blank" rel="noopener">本文所需rpm及repo</a><br>提取码：rp3l</p>
<p>参考：</p>
<p>Linux就该这么学</p>
<p><a href="https://blog.csdn.net/eddy_chan/article/details/54728385" target="_blank" rel="noopener">https://blog.csdn.net/eddy_chan/article/details/54728385</a></p>
]]></content>
      <tags>
        <tag>Technology Blog</tag>
        <tag>Linux</tag>
        <tag>yum</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux环境下安装python3.x</title>
    <url>/2020/03/15/Linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85python3-x/</url>
    <content><![CDATA[<h2 id="Linux下python版本"><a href="#Linux下python版本" class="headerlink" title="Linux下python版本"></a>Linux下python版本</h2><p>目前Linux下的绝大部分系统都自带了python2.x的版本,而现在python的主流版本已经到了3.x。为此我们需要将python3.x安装在自己的Linux系统上。</p>
<a id="more"></a>
<p>查看python版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@xiaohui ~]# python --version</span><br><span class="line">Python 2.7.5</span><br></pre></td></tr></table></figure>
<h2 id="安装python3步骤"><a href="#安装python3步骤" class="headerlink" title="安装python3步骤"></a>安装python3步骤</h2><p>1.使用wget下载python3.x的安装包</p>
<p>笔者下载的是3.7.1的版本，其余的版本也可根据自己的需要进行下载</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@xiaohui ~]# wget https:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.7.1&#x2F;Python-3.7.1rc2.tgz</span><br></pre></td></tr></table></figure>
<p>2.创建存放python3.x的文件夹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@xiaohui ~]# mkdir  &#x2F;usr&#x2F;local&#x2F;python3&#x2F;</span><br></pre></td></tr></table></figure>
<p>3.将压缩包移至创建的文件夹内并切换至该文件夹解压安装包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@xiaohui ~]# mv Python-3.7.1rc2.tgz &#x2F;usr&#x2F;local&#x2F;python3</span><br><span class="line">[root@xiaohui ~]# cd  &#x2F;usr&#x2F;local&#x2F;python3</span><br><span class="line">[root@xiaohui python3]# tar -zxf  Python-3.7.1rc2.tgz</span><br></pre></td></tr></table></figure>
<p>4.切换至解压的文件夹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@xiaohui python3]# cd .&#x2F;Python-3.7.1rc2</span><br></pre></td></tr></table></figure>
<p>5.配置、编译和执行安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@xiaohui Python-3.7.1rc2]# .&#x2F;configure --with-ssl</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">[root@xiaohui Python-3.7.1rc2]# make</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">[root@xiaohui Python-3.7.1rc2]# make install</span><br><span class="line">...</span><br><span class="line"># 安装成功显示</span><br><span class="line">Collecting setuptools</span><br><span class="line">Collecting pip</span><br><span class="line">Installing collected packages: setuptools, pip</span><br><span class="line">Successfully installed pip-10.0.1 setuptools-39.0.1</span><br></pre></td></tr></table></figure>
<p>步骤5中可能会出现一些errors，主要是缺少相应的依赖包，只需要通过yum安装对应的依赖包即可解决。笔者就遇到了三个errors</p>
<p>错误1 缺少gcc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 错误代码</span><br><span class="line">configure: error: no acceptable C compiler found in $PATH</span><br></pre></td></tr></table></figure>
<p>该错误是因为本机缺少gcc编译环境，只需安装gcc即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装命令</span><br><span class="line">[root@xiaohui Python-3.7.1rc2]# yum install -y gcc</span><br></pre></td></tr></table></figure>
<p>错误2 缺少zlib</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 错误代码</span><br><span class="line">zipimport.ZipImportError: can&#39;t decompress data; zlib not available</span><br></pre></td></tr></table></figure>
<p>该错误是因为本机缺少zlib解压缩类库，只需安装zlib即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装命令</span><br><span class="line">[root@xiaohui Python-3.7.1rc2]# yum install -y zlib*</span><br></pre></td></tr></table></figure>
<p>错误3 缺少libffi-devel</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 错误代码</span><br><span class="line">ModuleNotFoundError: No module named &#39;_ctypes&#39;</span><br></pre></td></tr></table></figure>
<p>该错误是因为本机缺少libffi-devel包，只需安装此包即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装命令</span><br><span class="line">[root@xiaohui Python-3.7.1rc2]# yum install -y libffi-devel</span><br></pre></td></tr></table></figure>
<p>注意在安装完缺少的依赖包后，仍需重新运行对应所在的配置、编译和执行安装命令</p>
<p>6.配置及建立软链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 将python库路径添加到&#x2F;etc&#x2F;ld.so.conf配置中</span><br><span class="line"># ld.so.conf文件是存储etc目录下的所有.conf文件</span><br><span class="line">[root@xiaohui Python-3.7.1rc2]# echo &quot;&#x2F;usr&#x2F;python&#x2F;lib&quot; &gt;&gt; &#x2F;etc&#x2F;ld.so.conf</span><br><span class="line">[root@xiaohui Python-3.7.1rc2]# ldconfig</span><br><span class="line"># 建立新的软链接至python3.x，原本旧链接无需删除</span><br><span class="line"># 原因在于例如CentOS的yum源是用python2.x编写的，删除可能会出一些错误</span><br><span class="line">[root@xiaohui Python-3.7.1rc2]# ln -s &#x2F;usr&#x2F;python&#x2F;bin&#x2F;python3 &#x2F;usr&#x2F;bin&#x2F;python3</span><br><span class="line">[root@xiaohui Python-3.7.1rc2]# ln -s &#x2F;usr&#x2F;python&#x2F;bin&#x2F;pip3 &#x2F;usr&#x2F;bin&#x2F;pip3</span><br></pre></td></tr></table></figure>
<p>经过上述步骤后则成功完成了python3.x的安装，我们可以检测系统的python版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@xiaohui ~]# python3 --version</span><br><span class="line">Python 3.7.1rc2</span><br><span class="line"># python2.x依旧存在</span><br><span class="line">[root@xiaohui ~]# python2 --version</span><br><span class="line">Python 2.7.5</span><br></pre></td></tr></table></figure>
<p>使用pip3测试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@xiaohui Python-3.7.1rc2]# pip3 list</span><br><span class="line">Package    Version </span><br><span class="line">---------- --------</span><br><span class="line">certifi    2019.3.9</span><br><span class="line">chardet    3.0.4   </span><br><span class="line">future     0.17.1  </span><br><span class="line">idna       2.8     </span><br><span class="line">itchat     1.2.32  </span><br><span class="line">pip        10.0.1  </span><br><span class="line">pypng      0.0.19  </span><br><span class="line">PyQRCode   1.2.1   </span><br><span class="line">requests   2.21.0  </span><br><span class="line">setuptools 39.0.1  </span><br><span class="line">urllib3    1.24.3  </span><br><span class="line">wxpy       0.3.9.8 </span><br><span class="line">You are using pip version 10.0.1, however version 19.1.1 is available.</span><br><span class="line">You should consider upgrading via the &#39;pip install --upgrade pip&#39; command.</span><br></pre></td></tr></table></figure>
<p>测试成功，python3已成功安装在本Linux系统上</p>
]]></content>
      <tags>
        <tag>Technology Blog</tag>
        <tag>Linux</tag>
        <tag>Python3-x</tag>
      </tags>
  </entry>
  <entry>
    <title>爬取拉钩python数据分析职位招聘信息</title>
    <url>/2020/03/15/python%E7%88%AC%E5%8F%96%E6%8B%89%E9%92%A9python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E8%81%8C%E4%BD%8D%E6%8B%9B%E8%81%98%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<h2 id="python数据分析"><a href="#python数据分析" class="headerlink" title="python数据分析"></a>python数据分析</h2><p>python数据分析是目前python最火的方向之一，为了解目前市场对该职位的需求，<br>我们爬取了拉钩上对pythons数据分析的招聘信息。</p>
<a id="more"></a>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>系统：windows7</p>
</blockquote>
<blockquote>
<p>python版本：3.7.1</p>
</blockquote>
<h2 id="爬虫分析"><a href="#爬虫分析" class="headerlink" title="爬虫分析"></a>爬虫分析</h2><p>1.谷歌浏览器打开拉钩官网<a href="https://www.lagou.com/，搜索框中输入要查询的职位，" target="_blank" rel="noopener">https://www.lagou.com/，搜索框中输入要查询的职位，</a><br>右键点击检查，找到名为positionAjax.json?needAddtionalResult=false的链接，<br>这就是我们要重点分析的地方。</p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/1.png" alt="图片"><br>抱着侥幸心理我们将链接<a href="https://www.lagou.com/jobs/positionAjax.json?needAddtionalResult=false输入浏览器中，" target="_blank" rel="noopener">https://www.lagou.com/jobs/positionAjax.json?needAddtionalResult=false输入浏览器中，</a><br>发现提示：{“status”:false,”msg”:”您操作太频繁,请稍后再访问”,”clientIp”:”113.57.183.6”,”state”:2402}<br>可见想要获取信息不是那么简单。</p>
<p>2.分析报文<br>首先发送get请求，获取session</p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/7.png" alt="图片"></p>
<p>session更新，发送post请求</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3hpYW9odWk5Ni9waWN0dXJlL21hc3Rlci8yLnBuZw?x-oss-process=image/format,png" alt="图片"></p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/3.png" alt="图片"><br>比较发现get请求和pos请求参数一致，这无疑减少了我们的工作量</p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/8.png" alt="图片"></p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/9.png" alt="图片"></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3hpYW9odWk5Ni9waWN0dXJlL21hc3Rlci80LnBuZw?x-oss-process=image/format,png" alt="图片"></p>
<p>分析翻页，点击下一页则会新增一天get请求，并且Form Data中的pn则会加1，这是翻页的关键</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3hpYW9odWk5Ni9waWN0dXJlL21hc3Rlci81LnBuZw?x-oss-process=image/format,png" alt="图片"></p>
<p><img src="https://raw.githubusercontent.com/xiaohui96/picture/master/6.png" alt="图片"><br>分析数据结构，选择需要存储的信息</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3hpYW9odWk5Ni9waWN0dXJlL21hc3Rlci8xMC5wbmc?x-oss-process=image/format,png" alt="图片"></p>
<p>分析完报文后就理清了我们的爬虫思路，首先构造get请求获取session;；更新session，发送post请求；通过改变Form Data中的pn值<br>实现翻页循环；获取并存储数据</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>1.构造get请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def get_json(url, data):</span><br><span class="line">    # 构造随机请求头</span><br><span class="line">    for i in range(100):</span><br><span class="line">        ua &#x3D; UserAgent()</span><br><span class="line">        # print(ua.random)</span><br><span class="line"></span><br><span class="line">    my_headers &#x3D; &#123;</span><br><span class="line">        # &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 6.1; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) &quot;</span><br><span class="line">        # &quot;Chrome&#x2F;67.0.3396.99 Safari&#x2F;537.36&quot;,</span><br><span class="line">        &quot;User-Agent&quot;: &quot;ua.random&quot;,</span><br><span class="line">        &quot;Referer&quot;: &quot;https:&#x2F;&#x2F;www.lagou.com&#x2F;jobs&#x2F;list_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90&quot;</span><br><span class="line">                   &quot;?city&#x3D;%E5%85%A8%E5%9B%BD&amp;cl&#x3D;false&amp;fromSearch&#x3D;true&amp;labelWords&#x3D;&amp;suginput&#x3D;&quot;,</span><br><span class="line">        &quot;Content-Type&quot;: &quot;application&#x2F;json;charset&#x3D;UTF-8&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>get请求主要由User_Agent, Referer和Content-Type组成，其中后两者可从上文报文中获取，为减少爬虫次数过多而被封，我们可通过<br>UserAgent构造随机请求头。UserAgent可通过pip install fake_useragent获得。下图是随机生成的请求头。</p>
<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xDkr5qVQ-1584262486509)(<a href="https://raw.githubusercontent.com/xiaohui96/picture/master/11.png)]" target="_blank" rel="noopener">https://raw.githubusercontent.com/xiaohui96/picture/master/11.png)]</a></p>
<p>2.获取并更新session，发送post请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 获取session</span><br><span class="line">   session &#x3D; requests.session()</span><br><span class="line">   # 更新</span><br><span class="line">   session.headers.update(my_headers)</span><br><span class="line">   session.get(</span><br><span class="line">       &quot;https:&#x2F;&#x2F;www.lagou.com&#x2F;jobs&#x2F;list_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90&quot;</span><br><span class="line">       &quot;?city&#x3D;%E5%85%A8%E5%9B%BD&amp;cl&#x3D;false&amp;fromSearch&#x3D;true&amp;labelWords&#x3D;&amp;suginput&#x3D;&quot;)</span><br><span class="line">   content &#x3D; session.post(url&#x3D;url, data&#x3D;data)</span><br></pre></td></tr></table></figure>
<p>3.构造翻页</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for num in range(1, page + 1):</span><br><span class="line">    url &#x3D; &#39;https:&#x2F;&#x2F;www.lagou.com&#x2F;jobs&#x2F;positionAjax.json?needAddtionalResult&#x3D;false&#39;</span><br><span class="line">    data &#x3D; &#123;</span><br><span class="line">        &#39;first&#39;: &#39;false&#39;,</span><br><span class="line">        &#39;pg&#39;: num,</span><br><span class="line">        &#39;kd&#39;: &#39;python数据分析&#39;,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>4.存储数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建workbook,即excel</span><br><span class="line">        workbook &#x3D; xlwt.Workbook(encoding&#x3D;&#39;utf-8&#39;)</span><br><span class="line">        # 创建表,第二参数用于确认同一个cell单元是否可以重设值</span><br><span class="line">        worksheet &#x3D; workbook.add_sheet(&#39;python数据分析&#39;, cell_overwrite_ok&#x3D;True)</span><br><span class="line">        for i, row in enumerate(info_result):</span><br><span class="line">            # print(row)</span><br><span class="line">            for j, col in enumerate(row):</span><br><span class="line">                # print(col)</span><br><span class="line">                worksheet.write(i, j, col)</span><br><span class="line">        workbook.save(&#39;python数据分析.xls&#39;)</span><br></pre></td></tr></table></figure>
<p>以上就是爬虫总体代码思路，完整代码如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># encoding: utf-8</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">@author: xiaohui</span><br><span class="line">@contact: xiaohui1295371450@163.com</span><br><span class="line">@file: crawl.py</span><br><span class="line">@time: 2019-05-14 10:44</span><br><span class="line">@desc: crawl data on lagou</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import json</span><br><span class="line">import requests</span><br><span class="line">import xlwt</span><br><span class="line">import time</span><br><span class="line">from fake_useragent import UserAgent</span><br><span class="line"></span><br><span class="line"># 获取存储职位信息的json对象，遍历获得城市、公司名称、工作地点、学历要求、职位名称、薪资、工作年限</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_json(url, data):</span><br><span class="line">    # 构造随机请求头</span><br><span class="line">    for i in range(100):</span><br><span class="line">        ua &#x3D; UserAgent()</span><br><span class="line">        print(ua.random)</span><br><span class="line"></span><br><span class="line">    my_headers &#x3D; &#123;</span><br><span class="line">        # &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 6.1; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) &quot;</span><br><span class="line">        # &quot;Chrome&#x2F;67.0.3396.99 Safari&#x2F;537.36&quot;,</span><br><span class="line">        &quot;User-Agent&quot;: &quot;ua.random&quot;,</span><br><span class="line">        &quot;Referer&quot;: &quot;https:&#x2F;&#x2F;www.lagou.com&#x2F;jobs&#x2F;list_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90&quot;</span><br><span class="line">                   &quot;?city&#x3D;%E5%85%A8%E5%9B%BD&amp;cl&#x3D;false&amp;fromSearch&#x3D;true&amp;labelWords&#x3D;&amp;suginput&#x3D;&quot;,</span><br><span class="line">        &quot;Content-Type&quot;: &quot;application&#x2F;json;charset&#x3D;UTF-8&quot;&#125;</span><br><span class="line">    time.sleep(5)</span><br><span class="line">    # 获取session</span><br><span class="line">    session &#x3D; requests.session()</span><br><span class="line">    # 更新</span><br><span class="line">    session.headers.update(my_headers)</span><br><span class="line">    session.get(</span><br><span class="line">        &quot;https:&#x2F;&#x2F;www.lagou.com&#x2F;jobs&#x2F;list_python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90&quot;</span><br><span class="line">        &quot;?city&#x3D;%E5%85%A8%E5%9B%BD&amp;cl&#x3D;false&amp;fromSearch&#x3D;true&amp;labelWords&#x3D;&amp;suginput&#x3D;&quot;)</span><br><span class="line">    content &#x3D; session.post(url&#x3D;url, data&#x3D;data)</span><br><span class="line">    result &#x3D; content.json()</span><br><span class="line">    info &#x3D; result[&#39;content&#39;][&#39;positionResult&#39;][&#39;result&#39;]</span><br><span class="line">    info_list &#x3D; []</span><br><span class="line">    information &#x3D; []</span><br><span class="line">    for job in info:</span><br><span class="line">        # 城市</span><br><span class="line">        information.append(job[&#39;city&#39;])</span><br><span class="line">        # 公司全名</span><br><span class="line">        information.append(job[&#39;companyFullName&#39;])</span><br><span class="line">        # 工作地点</span><br><span class="line">        information.append(job[&#39;district&#39;])</span><br><span class="line">        # 学历要求</span><br><span class="line">        information.append(job[&#39;education&#39;])</span><br><span class="line">        # 职位名称</span><br><span class="line">        information.append(job[&#39;positionName&#39;])</span><br><span class="line">        # 薪资</span><br><span class="line">        information.append(job[&#39;salary&#39;])</span><br><span class="line">        # 工作年限</span><br><span class="line">        information.append(job[&#39;workYear&#39;])</span><br><span class="line">        info_list.append(information)</span><br><span class="line">    return info_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    page &#x3D; int(input(&#39;输入爬取的页码总数：&#39;))</span><br><span class="line">    info_result &#x3D; []</span><br><span class="line">    title &#x3D; [&#39;城市&#39;, &#39;公司全名&#39;, &#39;工作地点&#39;, &#39;学历要求&#39;, &#39;职位名称&#39;, &#39;薪资&#39;, &#39;工作年限&#39;]</span><br><span class="line">    info_result.append(title)</span><br><span class="line">    for num in range(1, page + 1):</span><br><span class="line">        url &#x3D; &#39;https:&#x2F;&#x2F;www.lagou.com&#x2F;jobs&#x2F;positionAjax.json?needAddtionalResult&#x3D;false&#39;</span><br><span class="line">        data &#x3D; &#123;</span><br><span class="line">            &#39;first&#39;: &#39;false&#39;,</span><br><span class="line">            &#39;pg&#39;: num,</span><br><span class="line">            &#39;kd&#39;: &#39;python数据分析&#39;,</span><br><span class="line">        &#125;</span><br><span class="line">        try:</span><br><span class="line">            info &#x3D; get_json(url, data)</span><br><span class="line">            info_result &#x3D; info_result + info</span><br><span class="line">            print(&quot;第%s页爬取成功&quot; % num)</span><br><span class="line">        except Exception as msg:</span><br><span class="line">            print(&quot;第%s页爬取失败&quot; % num)</span><br><span class="line"></span><br><span class="line">        # 创建workbook,即excel</span><br><span class="line">        workbook &#x3D; xlwt.Workbook(encoding&#x3D;&#39;utf-8&#39;)</span><br><span class="line">        # 创建表,第二参数用于确认同一个cell单元是否可以重设值</span><br><span class="line">        worksheet &#x3D; workbook.add_sheet(&#39;python数据分析&#39;, cell_overwrite_ok&#x3D;True)</span><br><span class="line">        for i, row in enumerate(info_result):</span><br><span class="line">            # print(row)</span><br><span class="line">            for j, col in enumerate(row):</span><br><span class="line">                # print(col)</span><br><span class="line">                worksheet.write(i, j, col)</span><br><span class="line">        workbook.save(&#39;python数据分析.xls&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>分析我们获得的excel数据，主要招聘地依旧集中在北京、上海和广州，薪资集中在15k-30k之间，可以说情景不错。<br>这不失为度过目前互联网寒冬的一种选择。</p>
<p>附：<a href="https://pan.baidu.com/s/1q8kSg1tvubtLfSK-X525Cg" target="_blank" rel="noopener">完整代码和爬虫数据结果</a><br>提取码：n9d9</p>
]]></content>
      <tags>
        <tag>Technology Blog</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下tar解压文件的一个小bug</title>
    <url>/2020/03/15/Linux%E4%B8%8Btar%E8%A7%A3%E5%8E%8B%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8Fbug/</url>
    <content><![CDATA[<h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>解压ideaIU-2019.1.2.tar.gz文件，使用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@xiaohui Downloads]# tar xzvf ideaIU-2019.1.2.tar.gz -C &#x2F;usr&#x2F;IDEA</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="错误代码："><a href="#错误代码：" class="headerlink" title="错误代码："></a>错误代码：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar (child): ideaIU-2019.1.2.tar.gz: Cannot open: No such file or directory</span><br><span class="line">tar (child): Error is not recoverable: exiting now</span><br><span class="line">tar: Child returned status 2</span><br><span class="line">tar: Error is not recoverable: exiting now</span><br></pre></td></tr></table></figure>

<h2 id="场景描述："><a href="#场景描述：" class="headerlink" title="场景描述："></a>场景描述：</h2><p>为避免麻烦我总是喜欢直接切换到root，当我在root情况下使用tar xzvf ideaIU-2019.1.2.tar.gz -C /usr/IDEA时出现上述错误，<br>当我切换到下载路径下进行解压时同样如此。各种尝试之后偶然切换回xiaohui用户并在下载目录下进行解压时出现解压过程，<br>只是提示deny permission。灵机一动的我一想这不就是没有root权限吗，这是我才想起了一直被我忽视的命令—sudo</p>
<h2 id="最终命令"><a href="#最终命令" class="headerlink" title="最终命令"></a>最终命令</h2><p><code>[xiaohui@xiaohui Downloads]$ sudo tar xzvf ideaIU-2019.1.2.tar.gz -C /usr/IDEA</code></p>
<p>解压成功</p>
]]></content>
      <tags>
        <tag>Technology Blog</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu环境安装Docker</title>
    <url>/2020/03/15/Ubuntu%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85Docker/</url>
    <content><![CDATA[<h2 id="Ubuntu环境安装Docker"><a href="#Ubuntu环境安装Docker" class="headerlink" title="Ubuntu环境安装Docker"></a>Ubuntu环境安装Docker</h2><p>Docker目前支持最低的Ubuntu版本为14.04LTS，从性能上考虑，推荐使用16.04LTS或者18.04LTS版本，并且系统内核越新越好，以支持Docker最新的特性。</p>
<a id="more"></a>
<p>1.系统要求</p>
<p>用户可通过以下命令查看自己的内核版本详细信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$ uname -a</span><br><span class="line">Linux xiaohui-virtual-machine 4.18.0-15-generic #16~18.04.1-ubuntu SMP Thu Feb 7 14:06:04 UTC 2019  X86_64 X86_64 X86_64 GNU&#x2F;Linux</span><br></pre></td></tr></table></figure>
<p>如果使用的Ubuntu版本是16.04 LTS版本，为了让Docker使用sufs存储，推荐安装下面两个安装包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$ sudo apt-get update</span><br><span class="line">xiaohui@xiaohui-virtual-machine:~$ sudo apt-get install -y \</span><br><span class="line">linux-image-extra-$(uname -r) \</span><br><span class="line">linux-image-extra-virtual</span><br></pre></td></tr></table></figure>
<p>2.添加镜像源</p>
<p>首先安装apt-transport-https等软件包支持https协议的源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$ sudo apt-get update</span><br><span class="line">xiaohui@xiaohui-virtual-machine:~$ sudo apt-get install \ </span><br><span class="line">apt-transport-https \</span><br><span class="line">ca-certificates \</span><br><span class="line">curl \</span><br><span class="line">software-properties-common</span><br></pre></td></tr></table></figure>
<p>添加源的gpg秘钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$ curl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>
<p>确认导入指纹为“9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88”的gpg公钥：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$ sudo apt-key fingerprint 0EBFCD88</span><br></pre></td></tr></table></figure>
<p>获取当前操作系统的代号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$ lsb_release -cs</span><br><span class="line">bionic</span><br></pre></td></tr></table></figure>
<p>如果系统是Ubuntu 16.04 LTS，系统代号则为xenial</p>
<p>添加Docker稳定版的官方软件源，注意修改自己的系统代号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$ sudo add-get-repository \</span><br><span class="line">&quot;deb [arch&#x3D;amd64] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu \</span><br><span class="line">bionic \</span><br><span class="line">stable&quot;</span><br></pre></td></tr></table></figure>
<p>添加成功后，再次更新apt软件包缓存</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$sudp apt-get update</span><br></pre></td></tr></table></figure>
<p>3.开始安装Docker<br>成功添加源之后，可以安装最新版的Docker了，软件包名称为docker-ce，代表是社区版本。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$ sudo apt-get install -y docker-ce</span><br></pre></td></tr></table></figure>
<p>4.当前用户加入docker用户组</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xiaohui@xiaohui-virtual-machine:~$ sudo usermod -aG USER_NAME</span><br><span class="line">#USER_NAME为用户名</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Technology Blog</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
